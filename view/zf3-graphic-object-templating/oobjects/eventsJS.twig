{# template pour l'ajout de la gestion des évènements à tout objet #}
{# l'event 'dummy' permet de programmer manuellement un évènement JavaScript sans déclenchement de callback #}

{% for evt, event in events %}
    {% if event is not empty %}
        {% if event.class != "dummy" %}
            $('#{{ objet.id }}').on('{{ evt }}',
            {% if tag is defined and tag is not empty %} '{{ tag }}', {% endif %}
            function (e) {
            {% switch(event.class) %}
            {% case 'javascript:' %}
                {{ event.method | raw }};
            {% default %}
                let {{ objet.id }}DOM = $('#{{ objet.id }}');
                let {{ objet.id }} = new {{ objet.object }}({{ objet.id }}DOM);
                var valid = 'OK';
                if (typeof {{ objet.id }}.validate === 'function') {
                    valid = {{ objet.id }}.validate();
                }
                if (valid.substring(0,2) == 'OK') {
                    $('#{{ objet.id }}').remove('has-error');
                    $('#{{ objet.id }} span').removeClass('hidden').addClass('hidden');
                    invokeAjax({{ objet.id }}.getData('{{ evt }}'), '{{ objet.id }}', '{{ evt }}', e);
                } else {
                    $('#{{ objet.id }}').remove('has-error').addClass('has-error');
                    $('#{{ objet.id }} span').removeClass('hidden');
                    $('#{{ objet.id }} span').html(valid.substring(2));
                }
            {% endswitch %}
            });
        {% endif %}
    {% endif %}
{% endfor %}
