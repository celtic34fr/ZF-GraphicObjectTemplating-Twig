{# template de l'objet ODColorpicker#}

{% set objClasses = 'gotObject hidden ' ~ objet.id ~ " " ~ objet.classes %}

<div id="{{ objet.id }}" data-objet="{{ objet.object }}" class="{{ objClasses }}"
    {% if objet.display is not empty %} data-display="{{ objet.display }}" {% endif %}
    {% if objet.widthBT is not empty %} data-widthbt="{{ objet.widthBT }}" {% endif %}
    {% if objet.form is not empty %} data-form="{{ objet.form }}" {% endif %}
    {% include "zf3-graphic-object-templating/oobjects/eventsHTML.twig" with {'events':objet.event} %}
>

    <style>
        #{{ objet.id }} label { float: left; margin: 0 0.1em; }
        #{{ objet.id }} div  {
            float: left;
            margin: 0 0.1em;
            {% if objet.hideInput == 'false' %}
            width: 128px !important;
            {% endif %}
        }
        {% if objet.hideInput == 'true' %}
        #{{ objet.id }} div input  { display: none; }
        {% endif %}
    </style>

    <label for="{{ objet.id }}Input"
            {% if objet.labelWidthBT is not empty %} data-widthbt="{{ objet.labelWidthBT }}" {% endif %}
    > {{ objet.label }} </label>
    <input id="{{ objet.id }}Input" class="colorPicker evo-cp0"
        {% if objet.inputWidthBT is not empty %} data-widthbt="{{ objet.inputWidthBT }}" {% endif %}
    />

    <script id="{{ objet.id }}Script">
        if ($.isFunction($.fn.colorpicker)) {
            $('#{{ objet.id }}Input').colorpicker({
                color: "{{ objet.colorRGB }}",
                defaultPalette: '{{ objet.defaultPalette }}',
                displayIndicator: {{ objet.displayIndicator }},
                hideButton: {{ objet.hideButton }},
                history: {{ objet.history }},
            {% if objet.initialHistory|length > 0 %}
                initialHistory: [ {% for color in object.initialHistory %}
                    "{{ color }}" {% if not loop.last %} , {% endif %}
                    {% endfor %}],
            {% endif %}
                showOn: "{{ objet.showOn }}",
                strings: "{{ objet.strings }}",
                transparentColor: {{ objet.transparentColor }}
            });

            {% if objet.labelWidthBT is not empty %}
            setBtClasses("#{{ objet.id }} label", $("#{{ objet.id }} label").data("widthbt"));
            {% endif %}
            {% if objet.inputWidthBT is not empty %}
            setBtClasses("#{{ objet.id }} .evo-cp-wrap", $("#{{ objet.id }} input").data("widthbt"));
            $("#{{ objet.id }} > div").css('width', '');
            {% endif %}

            {% if objet.event is not empty %}
            {% include "zf3-graphic-object-templating/oobjects/eventsJS.twig" with { events:objet.event } %}
            {% endif %}
        }
    </script>
</div>