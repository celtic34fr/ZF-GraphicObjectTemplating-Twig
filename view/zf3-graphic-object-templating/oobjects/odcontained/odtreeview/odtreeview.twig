{# template de l'objet ODTreeview #}

{% import _self as macros %}

{% macro drawLeaf(item, path, icon, objet, level) %}
    {#{ dump(objet.colorClasses[level].normal['bg-color']) }#}
    {% import _self as macros %}
    {% if item.children|length == 0 %}
        <li id="{{ objet.id }}Li-{{ path[item.ref] }}"
            data-id = "{{ path[item.ref] }}"
            class="{{ objet.colorClasses[level].normal['fg-color'] }} bg-{{ objet.colorClasses[level].normal['bg-color'] }} p1 mb1 {% if item.selectable == false %} unselect{% endif %} leaf"
        >
            {% if objet.icon %}
                {% switch(item.icon) %}
                {% case 'none' %}
                    <i class="{{ objet.leafIco }} icon leaf"></i>
                {% default %}
                    <i class="{{ item.icon }} icon leaf"></i>
                {% endswitch %}
            {% endif %}
            <label>
                {{ item.libel }}<span {% if item.check %} class="check"{% endif %} ></span>
            </label>
        </li>
    {% else %}
        <li id="{{ objet.id }}Li-{{ path[item.ref] }}" data-id = "{{ path[item.ref] }}"
            class="{{ objet.colorClasses[level].normal['fg-color'] }} bg-{{ objet.colorClasses[level].normal['bg-color'] }} p1 mb1 {% if item.selectable == false %} unselect {% endif %} node"
        >
            {% if objet.icon %}
                <i class="{{ objet.nodeClosedIco }}"></i>
            {% endif %}
            <label>
                {{ item.libel }}<span {% if item.check %} class="check"{% endif %} ></span>
            </label>
            <ul class="t-sortable-inner {% if item.sortable == false %} disabled {% endif %}">
                {% for id,leaf in item.children %}
                    {{ macros.drawLeaf(leaf, path, icon, objet, level + 1) }}
                {% endfor %}
            </ul>
        </li>
    {% endif %}
{% endmacro %}

<div id="{{ objet.id }}" class="gotObject hidden {{ objet.classes }}" data-objet="{{ objet.object }}"
     {% if objet.widthBT is not empty %}data-widthbt="{{ objet.widthBT }}" {% endif %}
        {% if objet.display is not empty %}data-display="{{ objet.display}}" {% endif %}
        {% if objet.form is not empty %} data-form="{{ objet.form }}" {% endif %}
     data-role="{{ objet.type }}" data-default="{{ objet.default ? 'true' : 'false' }}"

        {% if objet.type != 'reset' and objet.type != 'link' %}
            {% include "zf3-graphic-object-templating/oobjects/eventsHTML.twig" with {'events':objet.event} %}
        {% endif %}
>
    <style>
        li .check {
            background: url("http://{{ gotHttpHost() }}/img/checkGreen.svg") no-repeat left top;
            background-size: 16px 16px;
            width:16px;
            height:16px;
            display: block;
            float: right;
        }
    </style>

    <div id="{{ objet.id }}Li-0-0">
        <label>
            {% if objet.title is defined and objet.title is not empty %}{{ objet.title}}{% endif %}
        </label>
        <ul class="t-sortable ml4 {% if objet.sortable == false %} disabled {% endif %}{% if objet.dataTree is not empty %}node{% endif %}">
            {% for leaf in objet.dataTree %}
                {{ macros.drawLeaf(leaf, objet.dataPath, objet.icon, objet, 1) }}
            {% endfor %}
        </ul>
    </div>

    <script type="text/javascript">

        function parcoursLis(liItem, arrayTree) {
            var LIs = $('#'+liItem.attr('id')+' > ul > li');
            var arrayItrem  = Array();
            if (LIs.length > 0) {
                LIs.each(function () {
                    arrayItrem.push($(this).attr("id"));
                    if ($(this.selector+' > ul')) {
                        var ret = parcoursLis($(this), arrayItrem)
                    }
                });
                arrayTree.push(arrayItrem);
            }
            return arrayTree;
        }

        {% if objet.sortable != false %}
        sortable('#{{ objet.id }} .t-sortable', {
            forcePlaceholderSize: true,
            placeholderClass: 'bg-navi border border-yellow',
            hoverClass: 'bg-maroon yellow',
            itemSerializer: function (item, container) {
                item.parent = '[parentNode]';
                item.node = '[Node]';
                item.html = item.html.replace('<', '&lt;');
                return item;
            },
            containerSerializer: function (container) {
                container.node = '[Node]';
                return container;
            },
        });

        sortable('.t-sortable-inner', {
            forcePlaceholderSize: true,
            items: ':not(.disabled)',
            placeholderClass: 'border border-maroon',
            hoverClass: 'bg-maroon yellow',
        });
        {% endif %}

        $(document).ready(function (evt) {
            {% if objet.sortable != false %}
            $('#{{ objet.id }} .t-sortable').on('sortupdate', function (evt) {
                evt.preventDefault();
                evt.stopPropagation();
                var treeObj = Array();
                parcoursLis($('#{{ objet.id }}Li-Root'), treeObj);
            });

            $('#{{ objet.id }} .t-sortable-inner').on('sortupdate', function (evt) {
                evt.preventDefault();
                evt.stopPropagation();
                var treeObj = Array();
                treeObj = parcoursLis($('#{{ objet.id }}Li-Root'), treeObj);
                console.log(treeObj);
            });
            {% endif %}

            {% if objet.selection != false %}
            $('li:not(.unselect)').on('click', function (evt) {
                evt.preventDefault();
                evt.stopPropagation();
                {% if objet.multiSelect != false %}
                let elem = $(this).find('> label > span');
                if (elem.hasClass('check')) {
                    elem.addClass('check').removeClass('check');
                } else {
                    elem.addClass('check');
                }
                {% else %}
                var selected = $('#{{ objet.id }}').find(' label span').hasClass('check');
                $('#{{ objet.id }}').find('label span').addClass('check').removeClass('check');
                if (!selected) { $(this).find('> label > span').addClass('check'); }
                {% endif %}
            });
            {% endif %}
        });

    </script>

</div>
