{# template de l'objet ODTreeview #}

{% import _self as macros %}

{% macro drawLeaf(item, path, icon, objet, level) %}
    {#{ dump(objet.colorClasses[level].normal['bg-color']) }#}
    {% import _self as macros %}
    {% if item.children|length == 0 %}
        <li id="{{ objet.id }}Li-{{ path[item.ref] }}"
            data-id = "{{ path[item.ref] }}"
            class="{{ objet.colorClasses[level].normal['fg-color'] }} bg-{{ objet.colorClasses[level].normal['bg-color'] }} p1 mb1 {% if item.selectable == false %} unselect{% endif %} leaf"
        >
            {% if objet.icon %}
                {% switch(item.icon) %}
                {% case 'none' %}
                    <i class="{{ objet.leafIco }} icon leaf"></i>
                {% default %}
                    <i class="{{ item.icon }} icon leaf"></i>
                {% endswitch %}
            {% endif %}
            <label>
                {{ item.libel|raw }}<span class="odtcheck {% if item.check %} check{% endif %}" ></span>
            </label>
        </li>
    {% else %}
        <li id="{{ objet.id }}Li-{{ path[item.ref] }}" data-id = "{{ path[item.ref] }}"
            class="{{ objet.colorClasses[level].normal['fg-color'] }} bg-{{ objet.colorClasses[level].normal['bg-color'] }} p1 mb1 {% if item.selectable == false %} unselect {% endif %} node"
        >
            {% if objet.icon %}
                <i class="{{ objet.nodeClosedIco }}"></i>
            {% endif %}
            <label>
                {{ item.libel|raw }}<span class="odtcheck {% if item.check %} check{% endif %}" ></span>
            </label>
            <ul class="t-sortable-inner {% if item.sortable == false %} disabled {% endif %}
            {% if objet.sortable != false and item.sortable != false %} sortable {% endif %}">
                {% for id,leaf in item.children %}
                    {{ macros.drawLeaf(leaf, path, icon, objet, level + 1) }}
                {% endfor %}
            </ul>
        </li>
    {% endif %}
{% endmacro %}

{% set objClasses = 'gotObject hidden ' ~ objet.classes %}

<div id="{{ objet.id }}" class="{{ objClasses }}" data-objet="{{ objet.object }}" data-role="{{ objet.type }}"
 data-default="{{ objet.default ? 'true' : 'false' }}"
{% if objet.widthBT is not empty %}data-widthbt="{{ objet.widthBT }}" {% endif %}
{% if objet.display is not empty %}data-display="{{ objet.display}}" {% endif %}
{% if objet.form is not empty %} data-form="{{ objet.form }}" {% endif %}

{% if objet.type != 'reset' and objet.type != 'link' %}
    {% include "zf3-graphic-object-templating/oobjects/eventsHTML.twig" with {'events':objet.event} %}
{% endif %}
>
    <style>
        li .check {
            background: url("http://{{ gotHttpHost() }}/img/checkGreen.svg") no-repeat left top;
            background-size: 16px 16px;
            width:16px;
            height:16px;
            display: block;
            float: right;
        }

        .p1  { padding-right: 0 !important }
    </style>

    <div id="{{ objet.id }}Li-0-0">
        <label>
            {% if objet.title is defined and objet.title is not empty %}{{ objet.title}}{% endif %}
        </label>
        <ul class="t-sortable ml4 {% if objet.sortable == false %} disabled {% endif %}
        {% if objet.dataTree is not empty %}node{% endif %} {% if objet.sortable != false %} sortable {% endif %}">
            {% for leaf in objet.dataTree %}
                {{ macros.drawLeaf(leaf, objet.dataPath, objet.icon, objet, 1) }}
            {% endfor %}
        </ul>
    </div>

    <script type="text/javascript">

        // function parcoursLis(liItem, arrayTree) {
        //     var LIs = $('#'+liItem.attr('id')+' > ul > li');
        //     var arrayItrem  = Array();
        //     if (LIs.length > 0) {
        //         LIs.each(function () {
        //             arrayItrem.push($(this).attr("id"));
        //             if ($(this.selector+' > ul')) {
        //                 var ret = parcoursLis($(this), arrayItrem)
        //             }
        //         });
        //         arrayTree.push(arrayItrem);
        //     }
        //     return arrayTree;
        // }

{#        {% if objet.sortable != false %}#}
{#        sortable('#{{ objet.id }} .t-sortable', {#}
{#            forcePlaceholderSize: true,#}
{#            placeholderClass: 'bg-navi border border-yellow',#}
{#            hoverClass: 'bg-maroon yellow',#}
{#            itemSerializer: function (item, container) {#}
{#                item.parent = '[parentNode]';#}
{#                item.node = '[Node]';#}
{#                item.html = item.html.replace('<', '&lt;');#}
{#                return item;#}
{#            },#}
{#            containerSerializer: function (container) {#}
{#                container.node = '[Node]';#}
{#                return container;#}
{#            },#}
{#        });#}

        {#sortable('.t-sortable-inner', {#}
        {#    forcePlaceholderSize: true,#}
        {#    items: ':not(.disabled)',#}
        {#    placeholderClass: 'border border-maroon',#}
        {#    hoverClass: 'bg-maroon yellow',#}
        {#});#}
        {#{% endif %}#}

        $(document).ready(function (evt) {
{#            {% if objet.sortable != false %}#}
{#            $('#{{ objet.id }} .t-sortable').on('sortupdate', function (evt) {#}
{#                evt.preventDefault();#}
{#                evt.stopPropagation();#}
{#                var treeObj = Array();#}
{#                treeObj = parcoursLis($('#{{ objet.id }}Li-Root'), treeObj);#}
{#                console.log('sortable');#}
{#                console.log(treeObj);#}
{#				invokeAjax(treeObj, '{{ objet.id }}', 'update', e);#}
{#            });#}

{#            $('#{{ objet.id }} .t-sortable-inner').on('sortupdate', function (evt) {#}
{#                evt.preventDefault();#}
{#                evt.stopPropagation();#}
{#                var treeObj = Array();#}
{#                treeObj = parcoursLis($('#{{ objet.id }}Li-Root'), treeObj);#}
{#                console.log('sortable-inner');#}
{#                console.log(treeObj);#}
{#				invokeAjax(treeObj, '{{ objet.id }}', 'update', e);#}
{#            });#}
{#            {% endif %}#}

            {% if objet.selection != false %}
            $('li:not(.unselect)').on('click', function (evt) {
                evt.preventDefault();
                evt.stopPropagation();

                if ($(this).find('> label > span.odtcheck').hasClass('check')) {
                    $(this).find('> label > span.odtcheck').removeClass('check');
                } else {
                    {% if objet.multiSelect == false %}
                    var selected = $('#{{ objet.id }}').find(' label span.odtcheck').hasClass('check');
                    $('#{{ objet.id }}').find('label span.odtcheck').addClass('check').removeClass('check');
                    {% endif %}
                    $(this).find('> label > span.odtcheck').addClass('check');
                }

                let objectDOM = $('#{{ objet.id }}');
                let object    = new odtreeview(objectDOM);
                invokeAjax(object.getData('click'), '{{ objet.id }}', 'click', evt);
            });
            {% endif %}
        });

    </script>

</div>
