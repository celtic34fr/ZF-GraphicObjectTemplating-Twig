{# template de l'objet ODTreeview #}

{% import _self as macros %}

{% macro drawLeaf(key, item, path, icon, objet) %}
    {% import _self as macros %}
    {% if item.children|length == 0 %}
        <li class="leaf" data-lvl="{{ path[item.ref] }}" data-ord="{{ key }}">
            {% if icon %}
                {% switch(item.icon) %}
                {% case 'none' %}
                    <i class="{{ objet.leafIco }} icon leaf"></i>
                {% default %}
                    <i class="{{ item.icon }}"></i>
                {% endswitch %}
            {% endif %}
            {{ item.libel }}
        </li>
    {% else %}
        <li class="node" data-lvl="{{ path[item.ref] }}" data-ord="{{ key }}">
            <input type="checkbox" id="lvl_{{ key }}">
            {% if icon %}
                {% switch(item.icon) %}
                {% case 'none' %}
                    <i class="{{ objet.nodeClosedIco }} icon closed"></i>
                    <i class="{{ objet.nodeOpenedIco }} icon opened"></i>
                {% default %}
                    <i class="{{ item.icon }} icon closed"></i>
                    <i class="{{ item.icon }} icon opened"></i>
                {% endswitch %}
            {% endif %}
            <label for="lvl_{{ key }}">{{ item.libel }}</label>
            <ul>
                {% for id,leaf in item.children %}
                    {{ macros.drawLeaf(id, leaf, path, icon, objet) }}
                {% endfor %}
            </ul>
        </li>
    {% endif %}
{% endmacro %}

<div id="{{ objet.id }}"
    data-objet="{{ objet.object }}" data-display="{{ objet.display }}" data-widthbt="{{ objet.widthBT }}"
    {% if objet.form|length > 0 %} data-form="{{ objet.form }}" {% endif %}
    class="gotObject hidden treeview {% if objet.classes is not empty %}{{ objet.classes }}{% endif %}"
    {% include "zf3-graphic-object-templating/oobjects/eventsHTML.twig" with {'events':objet.event} %}
>
    <style>
    {% if objet.styleTree is defined and objet.styleTree|length > 0 %}

            {% for item in styleTree %}
            /* habillage sp√©cifique */
            li[data-lvl="{{ item.level }}"]:hover {
                border: 1px solid {{ item.color }};
                border-radius: 3px;
                background-color: {{ item.backgroundColor }};
            }
            {% endfor %}
    {% endif %}
    </style>

    <ul>
        {% for id,leaf in objet.dataTree %}
            {{ macros.drawLeaf(id, leaf, objet.dataPath, objet.icon, objet) }}
        {% endfor %}
    </ul>

    <script>
        $(document).ready(function (e) {

            {% if objet.event is not empty %}
            {% include "zf3-graphic-object-templating/oobjects/eventsJS.twig" with { events:objet.event } %}
            {% endif %}

            $("#{{ objet.id }} li").click(function (e) {
                e.preventDefault();
                e.stopImmediatePropagation();
                let asSelect = $(this).hasClass('selected');
                if ($(this).hasClass('node')) {
                    $(this).find('input').prop("checked", !$(this).find('input').prop("checked"));
                    if (!$(this).find('input').prop("checked")) {
                        $(this).find('li').each(function (e) {
                            if ($(this).hasClass('selected')) { $(this).removeClass('selected'); }
                        });
                        asSelect = true;
                    }
                }
                {% if objet.multiSelect == false %}
                $("#{{ objet.id }} li").each(function (e) {
                    if ($(this).hasClass('selected')) { $(this).removeClass('selected');}
                });
                {% endif %}
                if (asSelect)   { $(this).removeClass('selected'); }
                else            { $(this).addClass('selected'); }
            });

        })
    </script>
</div>
