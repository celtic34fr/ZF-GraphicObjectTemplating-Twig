{# template pour l'objet ODFileUpload #}

{#

url visualiser  url('gotFileUpload', {'action': 'view', 'id': N°image ou nomImage})
url télécharger url('gotFileUpload', {'action': 'download', 'id': N°image ou nomImage})
#}

{%  set allowedFiles = objet.acceptedFiles %}
{%  set allowedFiles = allowedFiles|merge(objet.userExtensions) %}
{% set accpetFiles  = '.' ~ implode(', .', allowedFiles) %}
{% set allowedFiles = '"' ~ implode('", "', allowedFiles) ~ '"' %}

<div id="{{ objet.id }}" class="gotObject hidden {{ objet.classes }} form-group"
        {% if objet.form is not empty %} data-form="{{ objet.form }}" {% endif %}
     data-objet="{{ objet.object }}" data-display="{{ objet.display }}" data-widthbt="{{ objet.widthBT }}"
        {% include "zf3-graphic-object-templating/oobjects/eventsHTML.twig" with {'events':objet.event} %}
>
    <style>
        #{{ objet.id }} .file-preview { min-height: 20.3em; }
    </style>

    <input id="{{ objet.id }}-input" type="file"
        {% if objet.multiple %}multiple{% endif %}
        {% if allowedFiles is not empty %}accept="{{ accpetFiles }}"{% endif %}
    >

    <script>
        $(document).ready(function () {
            $('#{{ objet.id }}-input').fileinput({
                language: '{{ objet.locale }}',
                showCaption: {{ objet.caption }},
                showPreview: {{ objet.preview }},
                showRemove: {{ objet.remove }},
                showUpload: {{ objet.upload }},
                showCancel: {{ objet.cancel }},
                showClose: {{ objet.close }},
                showUploadedThumbs: {{ objet.uploadedThumbs }},
                showBrowse: {{ objet.browse }},
                browseOnZoneClick: {{ objet.browseOnClick }},
                dropZoneEnabled: {{ objet.dropZone }},
            {% if objet.dropZoneTitle is not empty %}
                dropZoneTitle: {{ objet.dropZoneTitle }},
            {% endif %}
            {% if objet.dropZoneClickTitle is not empty and objet.dropzone %}
                dropZoneClickTitle: {{ objet.dropZoneClickTitle }},
            {% endif %}
                allowedFileExtensions: [{{ allowedFiles|raw }}],
            {% if objet.initialCaption is not empty %}
                initialCaption: "{{ objet.initialCaption }}",
            {% endif %}
                removeFromPreviewOnError: {{ objet.removeFromPreviewOnError }},
                maxFilePreviewSize: 10240,
            });
        });
    </script>
</div>

{#
        {% set urlView = url ('gotFileUpload', {'action': 'view'}) %}
        {% set urlDelt = url ('gotFileUpload', {'action': 'delete'}) %}
        {% set urlLoad = url ('gotFileUpload', {'action': 'download'}) %}

                hideThumbnailContent: {{ objet.thumbnailContent ? 'true' : 'false' }},

            {% if objet.minFileSize > 0 %}
                minFileSize: {{ objet.minFileSize }},
            {% endif %}
            {% if objet.maxFileSize > 0 %}
                maxFileSize: {{ objet.maxFileSize }},
            {% endif %}
            {% if objet.maxFilePreviewSize > -1 %}
                maxFilePreviewSize: {{ objet.maxFilePreviewSize }},
            {% endif %}
            {% if objet.minFileCount > 0 %}
                minFileCount: {{ objet.minFileCount }},
            {% endif %}
            {% if objet.maxFileCount > 0 %}
                maxFileCount: {{ objet.maxFileCount }},
            {% endif %}
                validateInitialCount: {{ objet.validateInitialCount }},

                autoReplace: {{ objet.autoReplace }},
                fileActionSettings: {
                    showUpload: {{ objet.showUploadFAS }},
                    showDownload: {{ objet.showDownloadFAS }},
                    showRemove: {{ objet.showRemoveFAS }},
                    showZoom: {{ objet.showZoomFAS }},
                    showDrag: {{ objet.showDragFAS }},
                },

            {% if objet.loadedFiles is not empty %}
                {% set initialPreview = {} %}
                {% set initialPreviewConfig = {} %}
                {% for loadedFile in loadedFiles %}
                    {% set indexFile = loop.index0 %}
                    {% set initialPreview = initialPreview|merge({ indexFile : urlView ~ '/' ~ loadedFile.src}) %}
                    {% set initialPreviewConfig = initialPreviewConfig|merge({ indexFile :
                        {
                            'caption': "'" ~ loadedFile.name ~ "'",
                            'downloadUrl': "'" ~ urlLoad ~ '/' ~ loadedFile.src ~ "'",
                            'size': loadedFile.size,
                            'width': "120px",
                            'key': loop.index,
                            'url': "'" ~ urlDelt ~ '/' ~ loadedFile.src ~ "'",
                            'extra': { 'id': "'" ~ loadedFile.name ~ "'" }
                        }
                    }) %}
                {% endfor %}
                initialPreview: {{ initialPreview|json_encode }},
                initialPreviewAsData: true,
                initialPreviewConfig: {{ initialPreviewConfig|json_encode }},
                initialPreviewShowDelete: {{ objet.initialPreviewShowDelete }},
            {% endif %}
                overwriteInitial: {{ objet.overwriteInitial }},

#}
